@model The_NewYork_Time.Models.Article

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Main_Layout.cshtml";
}
<script src="~/Areas/AssetAdmin/ckeditor/ckeditor.js"></script>


@using (Html.BeginForm("Edit", "ArticlesAdmin", FormMethod.Post, new { @class = "form" }))
{


<div class="form-horizontal">
    <h4>Article</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.articlename, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.articlename, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.articlename, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.contentarticle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <textarea class="ckeditor" name="contentarticle" [ValidateInput(false)]></textarea>
            @*@Html.TextAreaFor(model => model.content1, htmlAttributes: new { id = "content", @class = "control-label" })
                @Html.ValidationMessageFor(model => model.content1, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.author, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.author, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.author, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idcategory, "idcategory", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("idcategory", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idcategory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-10">
        <div class="col-md-offset-2 btn-touch">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
}


